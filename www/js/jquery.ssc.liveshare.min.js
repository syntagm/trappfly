/*!
 * jQuery UI Widget-factory plugin Live Share
 * Author: @anuvib
 * Licensed under the SpreadsheetConverter
 * may, 2014
 */

;
(function ($, window, document, undefined) {
    var _ls;
    window.ls_ = true;
    $(function(){
        var tt = ssc.liveshare.connection;
        var protocol = document.location.protocol == 'https:' ? 'wss:' : 'ws:';
        //var host = location.origin.replace(/^http/, 'ws'); //for heroku...
        var host =  protocol + '//share.spreadsheetconverter.com/share2_ws.yaws';
            uqs_debug = getUrlVars()['d'], //"url query string" debug
            uqs_nodejs = getUrlVars()['n'],
            el_inputs = $('input:not(":button,[readonly=readonly],:disabled"),select,a.ui-slider-handle,textarea,a.ui-state-active','#formc');
        if(uqs_debug == 1){
            ssc.liveshare.debug = true;
            $('body').append('<div id="debugWindow" class="center"></div>');
        }
        if(uqs_nodejs == 1) {
            ssc.liveshare.nodejs = true;
            host = protocol + '//share2.spreadsheetconverter.com:3000/';
        }else if(uqs_nodejs == 2) {
            ssc.liveshare.nodejs = true;
            host = protocol + '//127.0.0.1:3000/';
        }

        _ls = $('section#ssc-ls').liveshare({websocketUrl: host});
        showLiveShareEnabledAlert();

        /* Dropdowns event are bound to parent element of ul which has dropdown-menu class */
        $('.dropup').on('show.bs.dropdown', function () {
            if ($('.popover').hasClass('in')) {
                $("#btnLiveShare").popover("hide");
                $("#btnLiveShare").popover('destroy');
            }
        })
		
		/**
		 * *************Initialize: binding event on Element (el)*******************
		 *
		 * Need to find better then this place; this is not even good place in the jquery.ssc.liveshare.js
		 */
		/* when any form input gets focus */
		el_inputs.focus(function(){
			if(ssc.liveshare.connection  && ssc.liveshare.connection.readyState == 1)
			{
				//console.log('focus in  ' + this.id);
				var msg = {};
				msg["edit"] = this.id; //{"edit":"xlew_1_1"}
				ssc.liveshare.connection.send(JSON.stringify(msg));
			}
		});

		/* when any form input loses focus */
		el_inputs.blur(function(){
			if(ssc.liveshare.connection  && ssc.liveshare.connection.readyState == 1){
				//console.log('focus out ' + this.id);
				var msg = {};
				msg["unedit"] = this.id; //{"unedit":"xlew_1_1"}
				ssc.liveshare.connection.send(JSON.stringify(msg));
			}
		});

        /* send setvalue message for slider on stop event.*/
         $('div[id^=slider_]').on('slidestop',function(event, ui){		
             ssc.liveshare.messageSend_setvalues(event.target.id.replace('slider_',''), ui.value);
        });
    });

    /**
     * display the green Pane at top of webpage while user opens the liveshare url.
     */
    function showLiveShareEnabledAlert() {
        var uqs_key = getUrlVars()["k"];//url query string 'key'
        var tmpl = "<div class='alert alert-success alert-dismissable errormessage text-center '>\
            <button id='btnBannerPane' type='button' class='close' onclick='closeBannerPane_callback()'>&times;</button>\
            <strong>This form is LiveShare enabled.</strong> Your changes in the form will be shared in group : <strong>"+uqs_key+"</strong> &nbsp;&nbsp;&nbsp; Please fill your name or email in <a href='#txtWsEmail' onclick='javascript:$(\"#txtWsEmail\").focus();'>LiveShare Settings  </a><span class='glyphicon glyphicon-bookmark'></span> at toolbar below.       <a href='http://www.spreadsheetconverter.com/liveshare-share-webpage/'><span style='float:right' title='learn more in our website.' data-toggle='tooltip' data-placement='left' class='glyphicon glyphicon-question-sign'></span></a>\
        </div>";

        if (uqs_key) {
            _ls.liveshare('autoConnect',uqs_key);
            if(ssc.liveshare.hasShareDataToken()===-1) {
                $('body').append(tmpl);
            }
        }
    }

    window.closeBannerPane_callback = function() {
         $('#btnBannerPane').alert('close');
        var uqs_key = getUrlVars()["k"];
        if(uqs_key){
            if(ssc.liveshare.hasShareDataToken() === -1) {
                ssc.liveshare.rememberShareDataToken(uqs_key);
            }
        }
    }

    var template = template || {}, self;
    template.Widget = "\
		<div class='btn-group dropup' style='display:inline-block; float:right; margin:16px 0 0 0;'>\
                <button id='btnLiveShare' type='button' class='btn btn-primary btn-xs'><span class='glyphicon glyphicon-transfer' style='margin-right: 2px;'></span>\
                    Live Share\
                </button>\
                <button id='btnUserList' type='button' class='btn btn-primary dropdown-toggle btn-xs' data-toggle='dropdown'>\
                    <span id='liveuserscount' class='badge pull-left' style='margin-top: 2px; margin-right: 5px'>0</span>\
                    <span class='caret'></span>\
                    <span class='sr-only'>Toggle Dropdown</span>\
                </button>\
                <ul id='liveuserslist' class='dropdown-menu pull-right' role='menu'>\
                    <li>&nbsp;&nbsp;No one is connected.\
                   </li>\
                </ul>\
            </div>";

    template.LiveSharePopover =
        "<div class='row'>\
            <div class='col-md-12 col-sm-12 text-center'>\
                <span id='pnlWsError' class='ui-state-text'></span>\
            </div>\
        </div>\
        <div class='row'>\
            <div class='col-md-12'>\
                <label for='lsSecretKey' data-toggle='tooltip' data-placement='left' title='provide unique name, so you can use it to save/share/collabrate this form.'>Secret key :\
                    </label>\
            </div>\
            <div class=' col-md-12 col-sm-12'>\
             <div class='input-group'>\
                 <input id='txtWsSecretkey' type='text' class='form-control input-sm' id='lsSecretKey' placeholder='secret key' title='provide unique name, so you can use it to save/share/collabrate this form.'>\
                 <span class='input-group-btn'>\
                    <button id='btnWsConnect' type='button' data-loading-text='Connecting...' class='btn btn-sm btn-primary wsconnect' style='margin-top: 0px' >Connect</button>\
                 </span>\
             </div>\
            </div>\
        </div>\
        <!--</div>-->\
        <div class='row'>\
            <div class='col-md-12'>\
                <label for='txtWsEmail' title='provide your name, so it is used during collaboration'>Your name or email :</label> <i>(optional)</i>\
            </div>\
        </div>\
        <div class='row'>\
            <div class='col-md-12 col-sm-12'>\
                <div class='input-group'>\
                    <input id='txtWsEmail' type='email' class='form-control input-sm' placeholder='name or email' data-toggle='tooltip'\
                           data-placement='left' title='provide your name, so it is used during collaboration'>\
                    <span class='input-group-btn'>\
                               <button id='btnWsEmailShare' type='button' class='btn btn-sm btn-default' style='color: #428bca;'>Share</button>\
                        </span>\
                </div>\
                <span>\
                    <i>\
                       It will appear in other's screen.\
                    </i>\
                </span>\
            </div>\
        </div>\
        <section id='shareUrl'>\
        <div style='margin-top: 8px;' class='row'>\
            <div class='col-md-6'>\
                <button id='btnShareUrl' type='button' class='btn btn-link btn-xs' data-toggle='tooltip' data-placement='left'\
                        title='Provides the URL to share'><span class='glyphicon glyphicon-share' style='margin-right: 2px'></span>Share for Collaboration</button>\
            </div>\
        </div>\
        </section>";

    template.getShareUrlPopover =
         "<div>\
             <p style='width: auto'>Hit <strong>Ctrl + C</strong> to copy the link below.  <br/> Send this to others to start Live Share with. </p>\
             <input id='txtDataShareUrl' class='form-control' type='text' style='width: 100%' value=''/>\
         </div>";
    template.BrowserNotSupport =
    "<div>Your browser does not support Live Share feature. \nPlease use Google Chrome, Firefox or Internet Explorer 10 or above.</div>";
    /**
     * define ssc.liveshare widget,
     * this will generates the *liveshare* widget in element  <section id='ssc-ls'></section>
     */
    $.widget("ssc.liveshare", {
        options: {
            websocketUrl: "ws://127.0.0.1:3000/",
            autoHidePanel: true
        },
        _create: function () {
            self = this;

            this.element.prepend(template.Widget);

            this.element.on('click','#btnLiveShare', this._showLiveSharePopover);
            this.element.on('click',"#btnWsConnect",this._connectWebSocket);
            this.element.on('click',"#btnWsEmailShare",this._postEmailShare);
            this.element.on('click',"#btnShareUrl",this._showGetShareUrlPopover);
            this.element.on('keypress',"#txtWsSecretkey",this._enterToConnect);
            this.element.on('keypress',"#txtWsEmail",this._enterToShareNameEmail);
        },

        _showLiveSharePopover: function () {
            if ($('.popover').hasClass('in')) {
                $('#btnLiveShare').popover('hide');
                $("#btnLiveShare").popover('destroy');
            } else {
                $('#btnLiveShare').popover({
                    "trigger": 'manual',
                    "placement": 'top',
                    "html": true,
                    "content": function () {
                        return window.isBrowserSupportsWS() ? template.LiveSharePopover : template.BrowserNotSupport;
                    },
                    "title": '<span class="text-info"><strong>Settings</strong></span><a href="http://www.spreadsheetconverter.com/support/tutorials/liveshare-share-webpage/" target="_blank" style="float: right;text-decoration: underline;">About Live Share</a></h3>' /*+
                        '<button type="button" id="close" class="close" onclick="$(&quot;#btnLiveShare&quot;).popover(&quot;hide&quot;);">&times;</button>'*/
                }).popover('show');
            }
            if (ssc.liveshare.secretKey) {
                $('#txtWsSecretkey').val(ssc.liveshare.secretKey);
            }
            if (ssc.liveshare.myEmail){
                $('#txtWsEmail').val(ssc.liveshare.myEmail);
            }
            if(ssc.liveshare.connected){
                var btnConn = $('#btnWsConnect');
                btnConn.text("Disconnect").addClass('btn-success');
            }
			$('#txtWsSecretkey').on('input propertychange paste', function() {
                if (ssc.liveshare.connected) {
                    ssc.liveshare.disconnect(true);
                }
            });
        },

        _showGetShareUrlPopover: function () {
            //close the liveshare popover first
            $('#btnLiveShare').popover('destroy');

            var url_ = getHref();
            if (ssc.liveshare.secretKey) {
                var shareurl_ = url_ + '?k=' + ssc.liveshare.secretKey;
                if (window.location.href.indexOf("n=1")>-1){
                    shareurl_ = shareurl_ + '&n=1';
                }
                //alert(shareurl_);
                $('#btnLiveShare').popover({
                    "trigger": 'manual',
                    "placement": 'top',
                    "html": true,
                    "content": function () {
                        return template.getShareUrlPopover;
                    },
                    "title": '<span class="text-info"><strong>Share for Collaboration</strong></span>' +
                        '<button type="button" id="close" class="close" onclick="$(&quot;#btnLiveShare&quot;).popover(&quot;destroy&quot;);">&times;</button>'
                }).popover('show');
                $('#txtDataShareUrl').val(shareurl_);
                $('#txtDataShareUrl').select();
            }
        },

        _connectWebSocket: function (event) {
            /**
             * Send mesage when user presses Enter key
             */
            var wsUrl = self.options.websocketUrl;
                btnWsConnect = $(this);

            if (!ssc.liveshare.connected) {
                btnWsConnect.button('loading');
                var emailshare = $('#txtWsEmail').val();
                if (emailshare) {
                    console.log('emailshare %s', emailshare);
                    ssc.liveshare.myName = emailshare;
                } else {
                    // ssc.liveshare.myName = "ananamous"
                }
                ssc.liveshare.formUrl = getHref();//window.location.href;
                ssc.liveshare.secretKey = $('#txtWsSecretkey').val();
                if($('#txtWsEmail').val().length > 1){
                    ssc.liveshare.myEmail = $('#txtWsEmail').val();
                }

                var timerId,
                    autoHide  = self.options.autoHidePanel;//(event && event.data && event.data.autoHidePanel) || ls.liveshare('option','autoHidePanel');
                ssc.liveshare.openWebSocket(wsUrl, function(success, err){
                    if(err){
                        if(timerId){
                            console.log('timer cleared: ' + timerId);
                            window.clearTimeout(timerId);
                        }
                        $('#pnlWsError').text(err);
                        $('#pnlWsError').css({'color':'#cd0a0a'});
                        // $('#pnlWsError').addClass('in');

						try{
                        // adjust top of panel for added text so down arrow keep points to LiveShare button
							$('div.popover').css({'top':-1*parseInt($('.popover')[0].offsetHeight,10)});
						}catch(e){}
						
                        if(!ssc.liveshare.connected){
                            $(liveuserscount).text('0');
                            $('#liveuserslist').empty();
                            $('#liveuserslist').html('&nbsp;&nbsp;No one is connected.');
                            $('#btnWsConnect').text("Connect").removeClass('btn-success').addClass('btn-primary');
                            $('#btnLiveShare').removeClass('btn-success');
							$(window).unbind('beforeunload');
                        }
                    }else {
                        //switch (success) {
                        if (success.hasOwnProperty('onopen')) {
                            btnWsConnect.button('reset')
                            $('#pnlWsError').empty();
                            $('#pnlWsError').text('You are now connected.');
                            $('#pnlWsError').css({'color':'#47a447'});
							
                           try{
							// adjust top of panel for added text so down arrow keep points to LiveShare button
								$('div.popover').css({'top':-1*parseInt($('.popover')[0].offsetHeight,10)});
							}catch(e){}

                            $('#btnWsConnect').text("Disconnect").addClass('btn-success');
                            $('#btnLiveShare').addClass('btn-success');                           

                            if(autoHide){
                                timerId = window.setTimeout(function(){$("#btnLiveShare").popover("hide");$("#btnLiveShare").popover("destroy");},3000);
                                console.log('opening timer on: ' + timerId );
                            }else{
                                self.options.autoHidePanel = true;//ls.liveshare('option','autoHidePanel',true);
                            }
							
							$(window).bind('beforeunload', function(){		
								return 'You have been connected to a Live Share session. If you navigate away from this page, your connection will be lost and you need to connect again.';
							});
                        }
                        else if (success.hasOwnProperty('message')) {
                            $('#liveuserscount').text(success.message.length);
                            $('#liveuserslist').empty();

                            for (var i = 0; i < success.message.length; i++) {
                                console.log("........ %s", success.message[i].user);

                                //$("#liveuserslist").append("<li><a href='#' style='background-color: #"+success.message[i].flag+"'>"+success.message[i].user+"</a></li>");
                                //<div class="userlist"><div class="flag" style="background-color: green"></div><span class="text">dena@spreadsheetconverter.com</span></div>
                                console.log("id:::::::"+success.message[i].id);
                                var myIcon = (ssc.liveshare.myId === success.message[i].id)?'<span class="glyphicon glyphicon-user"></span>':'';
                                $('#liveuserslist').append('<li><div class="userlist"><div class="flag" style="background-color: #'+success.message[i].flag+'">'+myIcon+'</div><span class="text">'+success.message[i].user+'</span></div></li>');
                            }
                        }
                        else if(success.hasOwnProperty('onclose')){
                            $('#pnlWsError').text(success['onclose']);
                            $('#pnlWsError').css({'color':'#cd0a0a'});
							
							// try catch needed here. if popover is closed, it gives error. 
							try{							
								// adjust top of panel for added text so down arrow keep points to LiveShare button
								$('div.popover').css({'top':-1*parseInt($('.popover')[0].offsetHeight,10)});
							}catch(e){}

                            $(liveuserscount).text('0');
                            $('#liveuserslist').empty();
                            $('#liveuserslist').html('&nbsp;&nbsp;No one is connected.');
                            $('#btnWsConnect').text("Connect").removeClass('btn-success').addClass('btn-primary');
                            $('#btnLiveShare').removeClass('btn-success');
                            // window.setTimeout(function(){$('div.popover').tooltip().hide();},3000);
                            //..console.log('closing timer on: '+ timerId);
							if(!success.itigger){
                            window.setTimeout(function(){$("#btnLiveShare").popover("hide");$("#btnLiveShare").popover("destroy");},3000);}
							$(window).unbind('beforeunload');
                        }
                    }
                });

            }else{
                if(ssc.liveshare.connected){
                    ssc.liveshare.disconnect();
                    btnWsConnect.text("Connect").removeClass('btn-success').addClass('btn-primary');					
                }
            }
        },

        _postEmailShare:function(){
            if (ssc.liveshare.connected) {
                var email  = $("#txtWsEmail").val();
                email = email.trim();
                if(email.length > 0) {
                    ssc.liveshare.myEmail = email;
                    ssc.liveshare.shareMyEmail(email);
                    $('#pnlWsError').text('Your name or email has been shared.');
                    $('#pnlWsError').css({'color':'#47a447'});
                    $('div.popover').css({'top':-1*parseInt($('.popover')[0].offsetHeight,10)});
                    window.setTimeout(function(){$("#btnLiveShare").popover("hide");$("#btnLiveShare").popover("destroy");},3000);
                    $('#btnBannerPane').alert('close');
                }
            }
        },
        _enterToConnect: function(event)
        {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if(keycode == '13'){
                $('#btnWsConnect').click();
            }
        },
        _enterToShareNameEmail: function(event)
        {
            var keycode = (event.keyCode ? event.keyCode : event.which);
            if(keycode == '13'){
                $('#btnWsEmailShare').click();
            }
        },
        // Destroy an instantiated plugin and clean up modifications the widget has made to the DOM
        destroy: function () {

            // this.element.removeStuff();
            // For UI 1.8, destroy must be invoked from the
            // base widget
            $.Widget.prototype.destroy.call(this);
            // For UI 1.9, define _destroy instead and don't
            // worry about
            // calling the base widget
        },

        autoConnect: function(secretKey){
            self.options.autoHidePanel = false;
            this._showLiveSharePopover();
            $('#txtWsSecretkey').val(secretKey);
            $('#btnWsConnect').click();
            $('#txtWsEmail').focus();
        },

        methodA: function (event) {
            this._trigger("dataChanged", event, {
                key: "someValue"
            });
        },

        // Respond to any changes the user makes to the option method
        _setOption: function (key, value) {
            switch (key) {
                //websocketUrl:"ws://127.0.0.1:3000/",autoHidePanel:true
                case "websocketUrl":
                    //readonly.websocketUrl = value;
                    break;
                case "autoHidePanel":
                    //readonly.autoHidePanel = value;
                    break;
                default:
                    //this.options[ key ] = value;
                    break;
            }

            // For UI 1.8, _setOption must be manually invoked
            // from the base widget
            $.Widget.prototype._setOption.apply(this, arguments);
            // For UI 1.9 the _super method can be used instead
            // this._super( "_setOption", key, value );
        }
    });

})(jQuery, window, document);